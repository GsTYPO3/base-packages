name: Synchronize Base Package

on:
  issues:
    types: [labeled]

jobs:
  synchronize_base_package:
    name: Synchronize Base Package
    if: contains(fromJson('["base-package-submit", "base-package-update"]'), github.event.label.name)
    runs-on: ubuntu-latest
    steps:
      - name: Print event
        env:
          EVENT: ${{ toJSON(github.event) }}
        run: |
          if [ "${RUNNER_DEBUG}" == "1" ]; then
            echo "$EVENT"
          fi

      - name: Checkout
        uses: actions/checkout@v3

      - name: Analyze issue
        id: issue
        uses: actions/github-script@v6
        with:
          script: |
            const label = new String(context.payload.label.name)
            const type = label.substring(13)
            const typeUC = type.charAt(0).toUpperCase() + type.slice(1)
            core.notice(`Issue type is ${type} / ${typeUC}.`)
            core.setOutput('type', type)
            core.setOutput('type_uc', typeUC)

            const body = new String(context.payload.issue.body)
            core.debug(`Body: ${body}`)
            const re = new RegExp(/Composer Package Name\s+(\S+)/, 'gm')
            const matches = re.exec(body)
            core.debug(matches)
            const packageName = matches[1]
            core.debug(`Package name: ${packageName}`)

            if (packageName === undefined || packageName === '') {
              core.error(`Package name not found in issue body:\n${body}`)
              core.setFailed('Package name not found in issue body.')
              return
            }

            core.setOutput('package_name', packageName)

            const fs = require('fs')
            const exists = (stat = fs.statSync(packageName, {throwIfNoEntry: false})) !== undefined ? stat.isDirectory() : false

            if (type === 'submit' && exists) {
              let response = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `The Base Package \`${packageName}\` does already exist. Please use the update issue instead.`,
              })

              if (core.isDebug()) {
                console.log(response)
              }

              response = await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                state: 'closed',
              })

              if (core.isDebug()) {
                console.log(response)
              }

              core.setFailed('Base Package does already exist, please use the update issue instead.')
              return
            } else if (type === 'update' && !exists) {
              let response = await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                body: `The Base Package \`${packageName}\` does not exist. Please use the submit issue instead.`,
              })

              if (core.isDebug()) {
                console.log(response)
              }

              response = await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.issue.number,
                state: 'closed',
              })

              if (core.isDebug()) {
                console.log(response)
              }

              core.setFailed('Base Package does not exist, please use the submit issue instead.')
              return
            }

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          extensions: intl, zip
          ini-values: memory_limit=-1
          php-version: latest
          tools: composer

      - name: Download Base Package
        run: |
          composer require -d.build ${{ steps.issue.outputs.package_name }}:@dev

      - name: Add change commit
        run: |
          git config user.name ${{ github.event.sender.login }}
          git config user.email ${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com
          git branch task/${{ steps.issue.outputs.package_name }}
          git switch task/${{ steps.issue.outputs.package_name }}
          git reset .build/composer.json
          git add .
          git commit -m "[TASK] ${{ steps.issue.outputs.type_uc }} ${{ steps.issue.outputs.package_name }}"
          git push -f origin task/${{ steps.issue.outputs.package_name }}

      - name: Create Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const response = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "[TASK] ${{ steps.issue.outputs.type_uc }} ${{ steps.issue.outputs.package_name }}",
              head: "task/${{ steps.issue.outputs.package_name }}",
              base: "main",
              body: `Closes #${context.payload.issue.number}`,
              maintainer_can_modify: true,
              draft: false,
            })

            if (core.isDebug()) {
              console.log(response)
            }

            if (response.status !== 201) {
              throw new Error(`Create pull request failed (${response.status}).`)
            }

            core.notice(`Pull request ${response.data.number} created.`)
